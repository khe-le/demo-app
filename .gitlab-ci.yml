stages:
  - build
  - staging
  - test_e2e
  - deploy

variables:
  IMAGE_NAME: "demo-app"
  IMAGE_VERSION: "$CI_COMMIT_SHORT_SHA"
  PORT_STAGING: "10005"
  PORT_PRODUCTION: "10004"

build_client:
  stage: build
  only:
    - staging
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_VERSION .


deploy_staging:
  stage: deploy
  only:
    - staging
  environment:
    name: staging
  before_script:
    - docker stop $IMAGE_NAME-stag || true && docker rm $IMAGE_NAME-stag || true
  script:
    - docker run -dit -p 127.0.0.1:$PORT_STAGING:80 --name $IMAGE_NAME-stag --restart unless-stopped $IMAGE_NAME:$IMAGE_VERSION

test_client:
  image: ppodgorsek/robot-framework:latest
  stage: test_e2e
  environment: staging
  only: 
    - staging
  script:
    - docker run -v /home/potato/Desktop/my-app/tests/Results/:/opt/robotframework/reports:Z -v /home/potato/Desktop/my-app/tests/:/opt/robotframework/tests:Z --net=host ppodgorsek/robot-framework
  
deploy_production:
  stage: deploy
  only:
    - production
  environment:
    name: production
  dependencies:
    - build_client
  before_script:
    - docker stop $IMAGE_NAME-stag || true && docker rm $IMAGE_NAME-stag || true
    - docker stop $IMAGE_NAME-prod || true && docker rm $IMAGE_NAME-prod || true
  script:
    - docker run -dit -p 127.0.0.1:$PORT_PRODUCTION:80 --name $IMAGE_NAME-prod --restart unless-stopped $IMAGE_NAME:$IMAGE_VERSION
  after_script:
    - docker container prune -f && docker image prune -f
